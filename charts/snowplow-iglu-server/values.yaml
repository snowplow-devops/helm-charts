global:
  # -- Cloud specific bindings (options: aws, gcp, azure)
  cloud: ""

  # global labels will be applied to all resources deployed by the chart
  labels: {}

# -- Overrides the full-name given to the deployment resources (default: .Release.Name)
fullnameOverride: ""

service:
  # -- Whether to run the post-deploy setup hooks
  deploySetupHooks: true

  # -- Map of annotations to add to the service.
  annotations: {}

  # -- Port to bind and expose the service on
  port: 8080
  image:
    repository: "snowplow/iglu-server"
    tag: "0.12.0-distroless"
    # -- Whether the repository is public
    isRepositoryPublic: true
    # -- The image pullPolicy to use
    pullPolicy: "IfNotPresent"
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 75
  terminationGracePeriodSeconds: 630

  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3

  readinessProbe:
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 2

  resources:
    limits:
      cpu: 746m
      memory: 900Mi
    requests:
      cpu: 400m
      memory: 512Mi

  config:
    # -- Map of additional environment variables to use within the deployment
    env:
      ACCEPT_LIMITED_USE_LICENSE: "no"
    secrets:
      # -- Lowercase uuidv4 to use as admin apikey of the service (default: auto-generated)
      superApiKey: ""
    repoServer:
      maxConnections: 16384
      idleTimeout: "65 seconds"
      hsts:
        enable: true
    database:
      # -- Can be either 'dummy' (in-memory) or 'postgres'
      type: "dummy"
      # -- Postgres database host
      host: ""
      # -- Postgres database port
      port: 5432
      # -- Postgres database name
      dbname: false
      secrets:
        username: ""
        password: ""
    # -- Whether to allow schema patching
    patchesAllowed: false

    # -- Optional Base64 encoded config HOCON (note: will not override above settings)
    hoconBase64: ""
    # -- Optional JAVA_OPTS inputs for the deployed service
    javaOpts: ""

  aws:
    # -- EC2 TargetGroup ARN to bind the service onto
    targetGroupARN: ""

  azure:
    # -- Whether we deploy for dev db
    dev_db: ""
    secrets:
      admin_username: ""
      dev_username: ""

  gcp:
    # -- Name of the Network Endpoint Group to bind onto
    networkEndpointGroupName: ""

    # -- Whether to use CloudSQL Proxy (note: requires GCP service account to be attached)
    deployProxy: false

    proxy:
      # -- Port to bind proxy onto
      port: 38000
      # -- Project where CloudSQL instance is deployed
      project: ""
      # -- Region where CloudSQL instance is deployed
      region: ""
      # -- Name of the CloudSQL instance
      instanceName: ""
      image:
        repository: "gcr.io/cloudsql-docker/gce-proxy"
        tag: "1.31.2"
        # -- Whether the repository is public
        isRepositoryPublic: true

      resources:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 50m
          memory: 128Mi

  # -- A map of ingress rules to deploy
  ingress: {}
    # ingress-01:
    #   enableTraefik: false # -- Enables traefik annotations and set ingressClassName. (default: true)
    #   hostname: "iglu-server.example.com"
    #   certificateCreate: false # -- Create a Certificate resource for this Ingress (default: true)
    #   certificateIssuerName: cloudflare # -- What issuer to use for the Certificate (default: letsencrypt)
    #   certificateIssuerKind: Issuer # -- Kind of issuer (default: ClusterIssuer)
    #   annotations: {} # -- Map of annotations to add to the ingress.
  # -- List of IP addresses to restrict ingress traffic to
  ingressIPAllowlist: []

cloudserviceaccount:
  # -- Whether to create a service-account
  deploy: false
  # -- Name of the service-account to create
  name: "snowplow-iglu-server-service-account"
  aws:
    # -- IAM Role ARN to bind to the k8s service account
    roleARN: ""
  gcp:
    # -- Service Account email to bind to the k8s service account
    serviceAccount: ""

dockerconfigjson:
  # -- Name of the secret to use for the private repository
  name: "snowplow-iglu-server-dockerhub"
  # -- Username for the private repository
  username: ""
  # -- Password for the private repository
  password: ""
  # -- Repository server URL
  server: "https://index.docker.io/v1/"
  # -- Email address for user of the private repository
  email: ""
