{{- if .Values.service.deploySetupHooks }}
{{- if eq (include "iglu.service.config.database.type" .) "postgres" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "iglu.hooks.name" . }}
  labels:
    {{ include "snowplow.labels" $ | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  template:
    metadata:
      name: {{ include "iglu.hooks.name" . }}
    spec:
      restartPolicy: Never
      containers:
      - name: {{ include "iglu.hooks.name" . }}
        image: {{ .Values.service.image.repository}}:{{ .Values.service.image.tag}}
        imagePullPolicy: Always

        args:
        - "setup"

        env:
        {{- range $k, $v := .Values.service.config.env }}
        - name: "{{ $k }}"
          value: "{{ $v }}"
        {{- end }}
        - name: "JDK_JAVA_OPTIONS"
          value: "-Dconfig.override_with_env_vars=true"
        {{- if .Values.service.gcp.deployProxy }}
        - name : "CONFIG_FORCE_iglu_database_host"
          value: {{ include "iglu.cloudsqlproxy.host" . }}
        - name : "CONFIG_FORCE_iglu_database_port"
          value: "{{ .Values.service.gcp.proxy.port }}"
        {{- else }}
        - name : "CONFIG_FORCE_iglu_database_host"
          value: "{{ .Values.service.config.database.host }}"
        - name : "CONFIG_FORCE_iglu_database_port"
          value: "{{ .Values.service.config.database.port }}"
        {{- end }}
        - name : "CONFIG_FORCE_iglu_database_dbname"
          value: "{{ .Values.service.config.database.dbname }}"

        envFrom:
        - secretRef:
            name: {{ include "iglu.app.secret.name" . }}
{{- end }}
{{- end }}
