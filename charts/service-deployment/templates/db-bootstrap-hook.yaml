{{- if .Values.databaseBootstrap.enabled }}
{{- if .Values.databaseBootstrap.secrets }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "app.fullname" . }}-db-bootstrap-secret
  labels:
    {{- include "snowplow.labels" . | nindent 4 }}
    app.kubernetes.io/component: db-bootstrap
  annotations:
    "helm.sh/hook": {{ .Values.databaseBootstrap.hookPhase }}
    "helm.sh/hook-delete-policy": {{ .Values.databaseBootstrap.hookDeletePolicy }}
    "helm.sh/hook-weight": "0"
type: Opaque
data:
  {{- range $k, $v := .Values.databaseBootstrap.secrets }}
  {{ $k }}: {{ $v | b64enc | quote }}
  {{- end }}
{{- end }}
{{- if .Values.databaseBootstrap.sqlScripts }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "app.fullname" . }}-db-bootstrap-sql
  labels:
    {{- include "snowplow.labels" . | nindent 4 }}
    app.kubernetes.io/component: db-bootstrap
  annotations:
    "helm.sh/hook": {{ .Values.databaseBootstrap.hookPhase }}
    "helm.sh/hook-delete-policy": {{ .Values.databaseBootstrap.hookDeletePolicy }}
    "helm.sh/hook-weight": "1"
data:
  {{- range .Values.databaseBootstrap.sqlScripts }}
  {{ .name }}: |
{{ .content | nindent 4 }}
  {{- end }}
{{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "app.fullname" . }}-db-bootstrap
  labels:
    {{- include "snowplow.labels" . | nindent 4 }}
    app.kubernetes.io/component: db-bootstrap
  annotations:
    "helm.sh/hook": {{ .Values.databaseBootstrap.hookPhase }}
    "helm.sh/hook-delete-policy": {{ .Values.databaseBootstrap.hookDeletePolicy }}
    "helm.sh/hook-weight": "2"
spec:
  backoffLimit: {{ .Values.databaseBootstrap.backoffLimit }}
  activeDeadlineSeconds: {{ .Values.databaseBootstrap.activeDeadlineSeconds }}
  template:
    metadata:
      name: {{ include "app.fullname" . }}-db-bootstrap
      labels:
        {{- include "snowplow.labels" . | nindent 8 }}
        app.kubernetes.io/component: db-bootstrap
    spec:
      restartPolicy: Never
      {{- if .Values.databaseBootstrap.sqlScripts }}
      volumes:
      - name: sql-scripts
        configMap:
          name: {{ include "app.fullname" . }}-db-bootstrap-sql
      {{- end }}
      containers:
      - name: db-bootstrap
        image: {{ .Values.databaseBootstrap.image }}
        command: ["/bin/sh", "-c"]
        args:
        - {{ .Values.databaseBootstrap.script | quote }}
        {{- if .Values.config.env }}
        env:
        {{- range $k, $v := .Values.config.env }}
        - name: "{{ $k }}"
          value: "{{ $v }}"
        {{- end }}
        {{- end }}
        {{- if .Values.databaseBootstrap.secrets }}
        envFrom:
        - secretRef:
            name: {{ include "app.fullname" . }}-db-bootstrap-secret
        {{- end }}
        {{- with .Values.databaseBootstrap.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.databaseBootstrap.sqlScripts }}
        volumeMounts:
        - name: sql-scripts
          mountPath: /bootstrap-sql
          readOnly: true
        {{- end }}
{{- end }}